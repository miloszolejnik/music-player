{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setSongs","activeLibraryHandler","nextPrev","newSong","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","onChange","e","target","value","min","max","duration","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e2a94e.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = (\r\n    {\r\n    currentSong, \r\n    setCurrentSong,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    audioRef,\r\n    setSongInfo,\r\n    songInfo,\r\n    songs,\r\n    setSongs\r\n        }) =>{\r\n\r\n    const activeLibraryHandler = (nextPrev) =>{\r\n        const newSong = songs.map((song) =>{\r\n            if(song.id === nextPrev.id ){\r\n                return{\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false\r\n                };\r\n            }\r\n        });\r\n        setSongs(newSong);\r\n    }\r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n            \r\n        }\r\n        else{\r\n            audioRef.current.play();{\r\n            setIsPlaying(!isPlaying);\r\n            }\r\n        }\r\n    };\r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        )\r\n    }\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...setSongInfo, currentTime: e.target.value});\r\n    }\r\n    const skipTrackHandler = async (direction) =>{\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\r\n        if(direction === 'skip-forward'){\r\n          await setCurrentSong(songs[ ( currentIndex + 1 ) % songs.length ] );\r\n          activeLibraryHandler(songs[ ( currentIndex + 1 ) % songs.length ] );\r\n        }else{\r\n            if((currentIndex - 1) % songs.length === -1){\r\n                await setCurrentSong(songs[ songs.length - 1] );\r\n                activeLibraryHandler(songs[ songs.length - 1] );\r\n            }else{\r\n                await setCurrentSong(songs[ ( currentIndex - 1 ) % songs.length ] );\r\n            } \r\n        }\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n    //Add the styles\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                    <div style={{background:`linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\r\n                        <input \r\n                            onChange={dragHandler} \r\n                            min={0} \r\n                            max={songInfo.duration || 0} \r\n                            value={songInfo.currentTime} \r\n                            type=\"range\"\r\n                        />\r\n                        <div style={trackAnim} className=\"animate-track\"></div>\r\n                    </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n            <FontAwesomeIcon \r\n            className=\"skip-back\" \r\n            onClick={()=> skipTrackHandler('skip-back')} \r\n            size=\"2x\" \r\n            icon={faAngleLeft} \r\n            />\r\n            <FontAwesomeIcon \r\n            className=\"play\" \r\n            onClick={playSongHandler} size=\"2x\" \r\n            icon={isPlaying ? faPause : faPlay} \r\n            />\r\n            <FontAwesomeIcon \r\n            className=\"skip-forward\" \r\n            onClick={()=> skipTrackHandler('skip-forward')} \r\n            size=\"2x\" \r\n            icon={faAngleRight} \r\n            />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ({currentSong}) =>{\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img alt={currentSong.name} src={currentSong.cover} />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from 'react';\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, audioRef, isPlaying, setSongs, id}) =>{\r\n    const songSelectHandler = async () => {\r\n        await setCurrentSong(song);\r\n        //Add Active State\r\n        const newSong = songs.map((song) =>{\r\n            if(song.id === id ){\r\n                return{\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSong);\r\n        //chcek if the song is playig\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n    return (\r\n        <div \r\n            onClick={songSelectHandler} \r\n            className={`library-song ${song.active ? 'selected' : \"\"}`}   >\r\n            <img alt={song.name} src={song.cover} />\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import { React } from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return(\r\n        <div className={`Library ${libraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map((song) => \r\n                <LibrarySong \r\n                key={song.id}\r\n                id={song.id}\r\n                setSongs={setSongs}\r\n                isPlaying={isPlaying}\r\n                audioRef={audioRef}\r\n                songs={songs}\r\n                setCurrentSong={setCurrentSong}\r\n                song={song} \r\n                />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) =>{\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={()=> setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","\nimport { useState, useRef } from \"react\";\n//Import Components\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import Syles\nimport './styles/app.scss'\n//Import Data\nimport data from './data';\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n  //State\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n});\n  //Event Handlers\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculate percentage\n    \n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100)\n    \n    \n    setSongInfo({...songInfo, currentTime:current, duration, animationPercentage:animation})\n}\n  const songEndHandler = async ()  =>{\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n    await setCurrentSong(songs[ ( currentIndex + 1 ) % songs.length ] );\n    if(isPlaying) audioRef.current.play();\n  }\n  return (\n    <div className={`App ${libraryStatus ? \"Libary-active\" : \"\"}`}>\n      <Nav \n      libraryStatus={libraryStatus}\n      setLibraryStatus={setLibraryStatus}\n      />\n      <Song  \n        currentSong={currentSong}/>\n      <Player \n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        audioRef={audioRef}\n        isPlaying={isPlaying} \n        setIsPlaying={setIsPlaying} \n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n        setSongs={setSongs}\n        />\n      <Library \n        libraryStatus={libraryStatus}\n        setSongs={setSongs}\n        isPlaying={isPlaying}\n        audioRef={audioRef}\n        songs={songs} \n        setCurrentSong={setCurrentSong} \n        currentSong={currentSong}\n        key={songs.id}\n        />\n      <audio \n        onLoadedMetadata={timeUpdateHandler} \n        onTimeUpdate={timeUpdateHandler} \n        ref={audioRef} \n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}